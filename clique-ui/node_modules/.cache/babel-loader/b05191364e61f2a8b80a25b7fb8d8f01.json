{"ast":null,"code":"import _objectSpread from \"/Users/abhiaiyer/Projects/happyhour/clique-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/abhiaiyer/Projects/happyhour/clique-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/abhiaiyer/Projects/happyhour/clique-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abhiaiyer/Projects/happyhour/clique-ui/src/components/LocationSearch.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query searchLocations($searchText: String!) {\\n    locations(searchText: $searchText) {\\n      id\\n      name\\n      avatar\\n      rating\\n      reviewCount\\n      url\\n      address {\\n        address1\\n        address2\\n        city\\n        country\\n        zipcode\\n        state\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0;\\n  margin: 0;\\n  list-style: none;\\n  max-height: 400px;\\n  overflow: hidden;\\n  overflow-y: scroll;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"react-emotion\";\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport ListItem from \"../core/ListItem\";\nimport { Flex } from \"../core/Flex\";\nimport Link from \"../core/Link\";\nimport Paragraph from \"../core/Paragraph\";\nimport RatingsWidget from \"./RatingsWidget\";\nvar List = styled(\"ul\")(_templateObject());\n\nfunction LocationSearch(_ref) {\n  var _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      isOpen = _ref.isOpen,\n      inputValue = _ref.inputValue,\n      listProps = _ref.listProps,\n      rest = _objectWithoutProperties(_ref, [\"items\", \"isOpen\", \"inputValue\", \"listProps\"]);\n\n  return React.createElement(List, Object.assign({}, listProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), isOpen && inputValue ? items.map(function (item, index) {\n    return React.createElement(ListItem, Object.assign({}, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Flex, {\n      className: css({\n        marginTop: 4\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, !!item.rating && React.createElement(\"div\", {\n      className: css({\n        alignSelf: \"center\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(RatingsWidget, {\n      currentRating: item.rating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), !!item.reviewCount && React.createElement(Paragraph, {\n      className: css({\n        alignSelf: \"center\",\n        marginLeft: 10,\n        fontSize: 11\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: item.url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Reviews (\", item.reviewCount, \")\"))));\n  }) : null);\n}\n\nvar search = gql(_templateObject2());\nexport default compose(graphql(search, {\n  options: function options(_ref2) {\n    var inputValue = _ref2.inputValue;\n    return {\n      variables: {\n        searchText: inputValue\n      }\n    };\n  },\n  props: function props(_ref3) {\n    var data = _ref3.data,\n        rest = _objectWithoutProperties(_ref3, [\"data\"]);\n\n    var locations = data && data.locations || [];\n    var items = locations.map(function (location) {\n      var _location$address = location.address,\n          address1 = _location$address.address1,\n          address2 = _location$address.address2,\n          city = _location$address.city,\n          state = _location$address.state,\n          zipcode = _location$address.zipcode;\n      return _objectSpread({}, location, {\n        title: location.name,\n        subtitle: \"\".concat(address1, \" \").concat(address2 || \"\", \" \").concat(city, \", \").concat(state, \" \").concat(zipcode)\n      });\n    });\n    return _objectSpread({\n      items: items,\n      loading: data.loading\n    }, rest);\n  }\n}))(LocationSearch);","map":{"version":3,"sources":["/Users/abhiaiyer/Projects/happyhour/clique-ui/src/components/LocationSearch.js"],"names":["React","css","styled","gql","graphql","compose","ListItem","Flex","Link","Paragraph","RatingsWidget","List","LocationSearch","items","isOpen","inputValue","listProps","rest","map","item","index","marginTop","rating","alignSelf","reviewCount","marginLeft","fontSize","url","search","options","variables","searchText","props","data","locations","location","address","address1","address2","city","state","zipcode","title","name","subtitle","loading"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAMC,IAAI,GAAGT,MAAM,CAAC,IAAD,CAAT,mBAAV;;AASA,SAASU,cAAT,OAMG;AAAA,wBALDC,KAKC;AAAA,MALDA,KAKC,2BALO,EAKP;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFDC,SAEC,QAFDA,SAEC;AAAA,MADEC,IACF;;AACD,SACE,oBAAC,IAAD,oBAAUD,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGF,MAAM,IAAIC,UAAV,GACGF,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACR,oBAAC,QAAD,oBAAcD,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAElB,GAAG,CAAC;AAAEoB,QAAAA,SAAS,EAAE;AAAb,OAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,CAACF,IAAI,CAACG,MAAP,IACC;AAAK,MAAA,SAAS,EAAErB,GAAG,CAAC;AAAEsB,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAEJ,IAAI,CAACG,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,EAMG,CAAC,CAACH,IAAI,CAACK,WAAP,IACC,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEvB,GAAG,CAAC;AAAEsB,QAAAA,SAAS,EAAE,QAAb;AAAuBE,QAAAA,UAAU,EAAE,EAAnC;AAAuCC,QAAAA,QAAQ,EAAE;AAAjD,OAAD,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEP,IAAI,CAACQ,GAAjB;AAAsB,MAAA,MAAM,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYR,IAAI,CAACK,WADjB,MAHF,CAPJ,CADF,CADQ;AAAA,GAAV,CADH,GAqBG,IAtBN,CADF;AA0BD;;AAED,IAAMI,MAAM,GAAGzB,GAAH,oBAAZ;AAqBA,eAAeE,OAAO,CACpBD,OAAO,CAACwB,MAAD,EAAS;AACdC,EAAAA,OAAO,EAAE,wBAAoB;AAAA,QAAjBd,UAAiB,SAAjBA,UAAiB;AAC3B,WAAO;AACLe,MAAAA,SAAS,EAAE;AACTC,QAAAA,UAAU,EAAEhB;AADH;AADN,KAAP;AAKD,GAPa;AAQdiB,EAAAA,KAAK,EAAE,sBAAuB;AAAA,QAApBC,IAAoB,SAApBA,IAAoB;AAAA,QAAXhB,IAAW;;AAC5B,QAAMiB,SAAS,GAAID,IAAI,IAAIA,IAAI,CAACC,SAAd,IAA4B,EAA9C;AACA,QAAMrB,KAAK,GAAGqB,SAAS,CAAChB,GAAV,CAAc,UAAAiB,QAAQ,EAAI;AAAA,8BACeA,QAAQ,CAACC,OADxB;AAAA,UAC9BC,QAD8B,qBAC9BA,QAD8B;AAAA,UACpBC,QADoB,qBACpBA,QADoB;AAAA,UACVC,IADU,qBACVA,IADU;AAAA,UACJC,KADI,qBACJA,KADI;AAAA,UACGC,OADH,qBACGA,OADH;AAEtC,+BACKN,QADL;AAEEO,QAAAA,KAAK,EAAEP,QAAQ,CAACQ,IAFlB;AAGEC,QAAAA,QAAQ,YAAKP,QAAL,cAAiBC,QAAQ,IAAI,EAA7B,cAAmCC,IAAnC,eAA4CC,KAA5C,cAAqDC,OAArD;AAHV;AAKD,KAPa,CAAd;AASA;AACE5B,MAAAA,KAAK,EAALA,KADF;AAEEgC,MAAAA,OAAO,EAAEZ,IAAI,CAACY;AAFhB,OAGK5B,IAHL;AAKD;AAxBa,CAAT,CADa,CAAP,CA2BbL,cA3Ba,CAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"react-emotion\";\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport ListItem from \"../core/ListItem\";\nimport { Flex } from \"../core/Flex\";\nimport Link from \"../core/Link\";\nimport Paragraph from \"../core/Paragraph\";\nimport RatingsWidget from \"./RatingsWidget\";\n\nconst List = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  max-height: 400px;\n  overflow: hidden;\n  overflow-y: scroll;\n`;\n\nfunction LocationSearch({\n  items = [],\n  isOpen,\n  inputValue,\n  listProps,\n  ...rest\n}) {\n  return (\n    <List {...listProps}>\n      {isOpen && inputValue\n        ? items.map((item, index) => (\n            <ListItem {...item}>\n              <Flex className={css({ marginTop: 4 })}>\n                {!!item.rating && (\n                  <div className={css({ alignSelf: \"center\" })}>\n                    <RatingsWidget currentRating={item.rating} />\n                  </div>\n                )}\n                {!!item.reviewCount && (\n                  <Paragraph\n                    className={css({ alignSelf: \"center\", marginLeft: 10, fontSize: 11 })}\n                  >\n                    <Link href={item.url} target=\"_blank\">\n                      Reviews ({item.reviewCount})\n                    </Link>\n                  </Paragraph>\n                )}\n              </Flex>\n            </ListItem>\n          ))\n        : null}\n    </List>\n  );\n}\n\nconst search = gql`\n  query searchLocations($searchText: String!) {\n    locations(searchText: $searchText) {\n      id\n      name\n      avatar\n      rating\n      reviewCount\n      url\n      address {\n        address1\n        address2\n        city\n        country\n        zipcode\n        state\n      }\n    }\n  }\n`;\n\nexport default compose(\n  graphql(search, {\n    options: ({ inputValue }) => {\n      return {\n        variables: {\n          searchText: inputValue\n        }\n      };\n    },\n    props: ({ data, ...rest }) => {\n      const locations = (data && data.locations) || [];\n      const items = locations.map(location => {\n        const { address1, address2, city, state, zipcode } = location.address;\n        return {\n          ...location,\n          title: location.name,\n          subtitle: `${address1} ${address2 || \"\"} ${city}, ${state} ${zipcode}`\n        };\n      });\n\n      return {\n        items,\n        loading: data.loading,\n        ...rest\n      };\n    }\n  })\n)(LocationSearch);\n"]},"metadata":{},"sourceType":"module"}