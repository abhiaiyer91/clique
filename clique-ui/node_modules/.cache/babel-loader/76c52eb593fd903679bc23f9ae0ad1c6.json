{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/abhiaiyer/Projects/happyhour/clique-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abhiaiyer/Projects/happyhour/clique-ui/src/core/Autocomplete.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  border-bottom-left-radius: 4px;\\n  border-bottom-right-radius: 4px;\\n  position: absolute;\\n  width: 100%;\\n  top: 45px;\\n  box-shadow: 0 15px 35px 0 rgba(42, 51, 83, 0.12),\\n    0 5px 15px rgba(0, 0, 0, 0.06);\\n  z-index: 5;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"react-emotion\";\nimport Downshift from \"downshift\";\nimport Input from \"./Input\";\nimport ListItem from \"./ListItem\";\nvar ListWrapper = styled(\"div\")(_templateObject());\nexport default function Autocomplete(_ref) {\n  var Component = _ref.Component,\n      placeholder = _ref.placeholder;\n  return React.createElement(Downshift, {\n    onChange: function onChange(selection) {\n      return alert(\"You selected \".concat(selection.value));\n    },\n    itemToString: function itemToString(item) {\n      return item ? item.value : \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, function (_ref2) {\n    var getInputProps = _ref2.getInputProps,\n        getItemProps = _ref2.getItemProps,\n        getLabelProps = _ref2.getLabelProps,\n        getMenuProps = _ref2.getMenuProps,\n        isOpen = _ref2.isOpen,\n        inputValue = _ref2.inputValue,\n        highlightedIndex = _ref2.highlightedIndex,\n        selectedItem = _ref2.selectedItem;\n    return React.createElement(\"div\", {\n      className: css({\n        position: \"relative\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Input, Object.assign({}, getInputProps(), {\n      placeholder: placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(ListWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Component, {\n      listProps: getMenuProps(),\n      isOpen: isOpen,\n      selectedItem: selectedItem,\n      highlightedIndex: highlightedIndex,\n      inputValue: inputValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  });\n}","map":{"version":3,"sources":["/Users/abhiaiyer/Projects/happyhour/clique-ui/src/core/Autocomplete.js"],"names":["React","css","styled","Downshift","Input","ListItem","ListWrapper","Autocomplete","Component","placeholder","selection","alert","value","item","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","position"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,WAAW,GAAGJ,MAAM,CAAC,KAAD,CAAT,mBAAjB;AAWA,eAAe,SAASK,YAAT,OAAkD;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC/D,SACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,kBAAAC,SAAS;AAAA,aAAIC,KAAK,wBAAiBD,SAAS,CAACE,KAA3B,EAAT;AAAA,KADrB;AAEE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAKA,IAAI,GAAGA,IAAI,CAACD,KAAR,GAAgB,EAAzB;AAAA,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG;AAAA,QACCE,aADD,SACCA,aADD;AAAA,QAECC,YAFD,SAECA,YAFD;AAAA,QAGCC,aAHD,SAGCA,aAHD;AAAA,QAICC,YAJD,SAICA,YAJD;AAAA,QAKCC,MALD,SAKCA,MALD;AAAA,QAMCC,UAND,SAMCA,UAND;AAAA,QAOCC,gBAPD,SAOCA,gBAPD;AAAA,QAQCC,YARD,SAQCA,YARD;AAAA,WAUC;AAAK,MAAA,SAAS,EAAEpB,GAAG,CAAC;AAAEqB,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,oBAAWR,aAAa,EAAxB;AAA4B,MAAA,WAAW,EAAEL,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEQ,YAAY,EADzB;AAEE,MAAA,MAAM,EAAEC,MAFV;AAGE,MAAA,YAAY,EAAEG,YAHhB;AAIE,MAAA,gBAAgB,EAAED,gBAJpB;AAKE,MAAA,UAAU,EAAED,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAVD;AAAA,GAJH,CADF;AA8BD","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"react-emotion\";\nimport Downshift from \"downshift\";\nimport Input from \"./Input\";\nimport ListItem from \"./ListItem\";\n\nconst ListWrapper = styled(\"div\")`\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  position: absolute;\n  width: 100%;\n  top: 45px;\n  box-shadow: 0 15px 35px 0 rgba(42, 51, 83, 0.12),\n    0 5px 15px rgba(0, 0, 0, 0.06);\n  z-index: 5;\n`;\n\nexport default function Autocomplete({ Component, placeholder }) {\n  return (\n    <Downshift\n      onChange={selection => alert(`You selected ${selection.value}`)}\n      itemToString={item => (item ? item.value : \"\")}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem\n      }) => (\n        <div className={css({ position: \"relative\" })}>\n          <Input {...getInputProps()} placeholder={placeholder} />\n          <ListWrapper>\n            <Component\n              listProps={getMenuProps()}\n              isOpen={isOpen}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n              inputValue={inputValue}\n            />\n          </ListWrapper>\n        </div>\n      )}\n    </Downshift>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}