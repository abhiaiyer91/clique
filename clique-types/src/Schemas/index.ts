
/******************************************************************************
*
* DO NOT EDIT THIS FILE.
*
* The contents of this file were generated by mergeSchemaExports.ts
*
******************************************************************************/

  export const CoreRootType = `
type Query {
  locations(searchText: String!): [Location]
  eventById(id: ID!): Event
  eventsForUser: [Event]
  invitationsForEvent(eventId: ID!): [Invitation]
}
type Mutation {
  inviteUserToEvent(eventId: ID!, name: String!, email: String!): ID
  resendInviteToEvent(invitationId: ID!): Boolean
  createEvent(type: EventType): Event
  updateEventLocation(eventId: ID!, locationId: ID!): Event
  updatePendingParticipants(eventId: ID!, participants: [ID!]!): Event
  updateParticipants(eventId: ID!, participants: [ID!]!): Event
  acceptInvitation(invitationId: ID!, code: ID!): Event
}
`;

export const UserRootType = `
type Query {
  me: User
  friends: [User]
}
type Mutation {
  signup(name: String!, email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
}
`;


